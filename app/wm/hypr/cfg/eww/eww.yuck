(deflisten currentWorkspace :initial "1" "~/.config/hypr/cfg/eww/bin/workspace.current")
(deflisten workspaces :initial "[]" "~/.config/hypr/cfg/eww/bin/workspace.list")

(deflisten volume  "~/.config/hypr/cfg/eww/bin/statuses.volume")
(deflisten brightness "~/.config/hypr/cfg/eww/bin/statuses.brightness")
(deflisten media "~/.config/hypr/cfg/eww/bin/statuses.media")
(deflisten battery "~/.config/hypr/cfg/eww/bin/statuses.battery")

(defpoll date :interval "1m" "~/.config/hypr/cfg/eww/bin/statuses.date")

(defwidget workspaces []
  (eventbox :onscroll "~/.config/hypr/cfg/eww/bin/workspace.change {}" :class "workspaces" :halign "center"
    (box
      :space-evenly true
      :orientation "v"
      (label :text "${workspaces}${currentWorkspace}" :visible false)
      (for workspace in workspaces
        (eventbox :onclick "hyprctl dispatch workspace ${workspace.id}"
          (box :class "workspace wp-${workspace.id} ${workspace.id == currentWorkspace ? "current" : ""} ${workspace.windows > 0 ? "occupied" : "empty"}"
            (label :class "wp-label" :text "${workspace.icon}")
          )
        )
      )
    )
  )
)

(defwidget indicator [ class onscroll value text ]
  (eventbox :onscroll "${onscroll}"
    (circular-progress
      :value "${value}"
      :class "${class} indicator"
      :thickness 3
      :clockwise true
      
      (label :text "${text}" :class "indicator-label")
    )))

(defwidget dp-indicator [ class value text ]
  (box
    :orientation "v" :space-evenly false :class "scale-ind"
    (label :text "${text}" :class "scale-ind-label")
    
    (progress
      :value "${value}"
      :orientation "h"
      :class "${class} indprog-bar"
    ))
)

(defwidget volume []
  (indicator
    :onscroll "~/.config/hypr/cfg/eww/bin/volume.change {}"
    :value "${volume.value}"
    :class "volume"
  :text "${volume.icon}"))

(defwidget brightness []
  (indicator
    :onscroll "~/.config/hypr/cfg/eww/bin/brightness.change {}"
    :value "${brightness.value}"
    :text "${brightness.icon}"
    :class "brightness"
  ))

(defwidget media []
  (indicator :onscroll "~/.config/hypr/cfg/eww/bin/brightness.change {}"
    :class "media"
    :value "${media.progress}"
    :text "${media.status == "Playing" ? "󰐊" : "󰏤"}"
  ))

(defwidget battery []
  (indicator
    :onscroll "echo {}"
    :value "${battery.level}"
    :text "${battery.icon}"
  :class "battery"))

(defwidget statuses []
  (box :class "statuses"
    :orientation "v"
    :space-evenly false
    (media)
    (brightness)
    (battery)
    (volume)))


(defwidget clock []
  (box
    :orientation "v"
    :class "clock"
    :halign "baseline"
    :space-evenly false
    
    (dp-indicator
      :class "hour"
      :value "${date.hour / 12*100}"
    :text "${date.hour}")
    
    (dp-indicator
      :class "minute"
      :value "${date.minute / 59*100}"
    :text "${date.minute}")
    
    (label :class "m ${date.m}" :text "${date.m}")))


(defwidget mainBar []
  (box :orientation "v" :class "box"
    :space-evenly true
    
    (box
      :valign "start"
      :halign "center"
      (workspaces)
    )
    
    (box :orientation "v" :valign "end" :halign "center"
      :space-evenly false
      (statuses)
      (clock))
  ))

(defwindow main
  :monitor 0
  :stacking "fg"
  :namespace "eww-main"
  :exclusive true
  
  :geometry (geometry
    :x "0%"
    :y "0%"
    :width "0%"
    :height "100%"
  :anchor "center left")
  (mainBar))
